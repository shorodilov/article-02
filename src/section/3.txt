********************
Настав час навчатись
********************

Отже, час прокачати свої навички. Є дуже багато шляхів це зробити. Розбиратись
з усіма я не стану: по-перше всіх я не знаю, а про деякі навіть не здогадуюсь;
по-друге - у такому разі ця стаття перетвориться на повноцінний буклет, а я б
бажав залишати її стислою.

Якщо з висоти глянути на всі можливі варіанти, то загально їх можна розділити
на дві великі групи: у першій ви керуєте своїм навчанням, у другій хтось робить
це за вас. І не слід сприймати цей поділ як "добре - погане": відверто не дієві
варіанти є в обох групах, і ми не будемо їх торкатись. А деякі опції мають
настільки змазані кордони, що дуже легко перетікають з однієї групи до іншої.

Ви мабуть здогадались, що ніхто не заборонить вам комбінувати усі доступні вам
методи в будь-яких пропорціях.

Почнемо з того, що на поверхні. З IT-курсів, де вам запропонують пройти наперед
визначену програму. Ця ж категорія одночасно є найбільшою. Тому мені доведеться
розділити її додатково.

Профільна вища освіта
=====================

Придивіться до "комп'ютерних" спеціальностей, які викладають в наших вишах.

Хтось може спитати: "Ти мабуть жартуєш? Які це в біса курси?" Перевіримо чек-
лист: наперед визначена програма, критерії оцінки, встановлені часові рамки.
Це IT-курси на максималках. Вам навіть доведеться декілька семестрів вивчати
суміжні (а іноді взагалі не суміжні) предмети. Одночасно цей варіант надає
найкращу можливу підготовку і знайомства,  якщо ви обрали денне навчання.

З мінусів:

- це довго (від 3 до 6 років)
- вимагає багато важкої та кропіткої праці та високого рівня самодисципліни
- потребує вагомих фінансових вливань [#]_

.. [#] Звісно є варіант пройти на бюджет. У такому разі якийсь час (можливо
       навіть увесь час вашого навчання) вам будуть платити яку-не-яку
       стипендію.

По завершенні отримаєте диплом, на який ніхто не буде дивиться.
Але за кордоном може стати в пригоді.

А можна одразу прицілитись на закордоні університети.

Зазвичай цим варіантом користуються наймолодші, а світчери обходять його
стороною, бо не мають стільки часу. Але я можу нагадити, що існує заочна
форма. І не треба вважати, що заочно навчаються тільки невдахи - цей
стереотип мав би давно канути в Лету.

Тут особливо й додати нема чого. Просто обирайте ВНЗ за покликом серця та
можливостями, і звертайте увагу на рейтинг, відгуки та умови. А далі
навчайтесь та зростайте.

IT-курси при компаніях
======================

Частенько називають себе академіями [#]_.
З тих, про які я знаю, викладають тут доволі досвідчені люди [#]_.
Потрапити сюди не так легко, як на звичайні комерційні курси,
але і вірогідність того, що залишитесь працювати після завершення
в тій самій компанії також далеко не нульова.

Цей варіант представляє концентровану та скорочену версію попереднього.
З навчальної програми викинуто усе, що не стосується робочого процесу
безпосередньо. Окрім вивчення якоїсь мови програмування та її фреймворків,
вас навчать користуватись супутніми технологіями: системи контролю версій,
хмарні сервіси, засоби відладки та моніторингу, тощо. На відміну від ВНЗ
навчають тому, що актуально тут і зараз, що можна розцінювати одночасно і як
плюс, і як мінус - залежить від кута зору.

.. [#] Що не позбавлено сенсу, бо дійсно можуть мати державну акредитацію.
.. [#] Якось я проходив співбесіду, де технічним інтерв'юєрами були як раз
       викладачі з такої академії.

       І виглядало це якось так: "Привіт. Я Іван. У мене 15-ть років досвіду
       праці на проектах різного напрямку. Зараз працюю з високо-навантаженим
       сервісом для американського ритейлера. А загалом я працював з..."

       А далі людина просто перелічувала усі мови програмування, фреймворки та
       технології про які я хоча б раз чув.

       "... Але якщо у мене буде недостатньо компетенції щоб тебе оцінити,
       то ось Михайло. Він працює вже 30-ть років..."

       А я сидів на стільці та думав: "Досить мене лякати!"

За зрозумілих причин, дозволити тримати такі академії можуть хіба що великі
компанії: платять викладачам пристойно, мають гарно побудовані процеси, стежать
за успіхами студентів та дійсно намагаються направляти їх навчання.

Комерційні IT-школи
===================

Вони ж відомі як IT-курси.
Той самий ширпотреб (або кому більше подобається - мейнстрим), куди йде
більшість. Тому на цьому варіанті я пропоную затриматись довше.
За останні роки їх наплодилось дуже багато. Нові школи відкриваються увесь час,
а деякі зачиняються не витримавши змагання з конкурентами.
В умовах доволі жорсткої конкуренції мають постійно вдосконалюватись,
а відділ маркетингу має витворяти дива гнучкості [#]_.

.. [#] Що також є частиною еволюційного процесу.

На відміну від поширеної думки не є цілком безкорисними, а за умови правильної
мотивації можуть доволі швидко прокачати професійні навички.
Серед усіх розглянутих тут варіантів, гарний курс має чи не найліпший показник
відношення теоретичних знань та практичних вмінь до витраченого часу.

Працевлаштування гарантоване?
-----------------------------

Щоб затягти до себе ще одного студента в хід йде все. Найпотужнішим аргументом
було і залишається "гарантоване працевлаштування". І тут ви маєте затямити
тільки одне - **ніяка школа не може цього вам гарантувати**! Мінімум необхідний
для цього: фільтрація студентів, гарно налаштовані додаткові процеси, жорсткий
контроль персонального прогресу, 3 (а краще 4) ментори закріплених за групою,
і ще купа всього дріб'язком. Школа, яка візьме на себе такі забов'язання дуже
швидко буде витіснена на фіг з ринку.

  Працевлаштування залежить тільки від вас, трохи від вашої удачі,
  і спроможності не пропустити свій шанс.

  -- Малєєв, Д.:cite:`dou:it-shovel`

Тому не ведіться на обіцянки влаштувати вас працювати. Вони усі пиздять!

Хто навчається?
---------------

Друге, що треба затямити - ніяка школа не може вас чогось навчити, якщо ви не
робите цього самостійно. Тобто наступний варіант не працює:

#. Заплатити за курс
#. Дочекатись його завершення
#. Почати працювати в Google
#. ...
#. PROFIT

Навчання - це тяжка праця, і за дуже обмежений час вам доведеться засвоїти
вагон абсолютно нової для вас інформації, навчитись її правильно застосовувати,
і не забувати щоденно практикуватись. Для цього вам знадобиться мати чіткі
мотивацію та її розуміння, трохи хисту, багато старанності, жорстку дисципліну,
та мега організованість. Без цього шанси засвоїти матеріал вчасно та на гарному
рівні майже нульові. Але людина з такими якостями, впорається з опануванням
професії і без курсів; школа в найкращому випадку надасть буст та скорегує
напрямок.

Я маю зробити на цьому наголос:
**IT-школа це не чарівна коробка, в яку ми кладемо камені,
а дістаємо діаманти**!

Люди тут не змінюються.
Ті, хто приходить навчатись - навчаються, і покидають курси з новими знаннями
та навичками.
Ті, хто приходить з думкою "Заплатив X тут, і тепер буду отримувати 100X там"
виходять з цією ж думкою.

Тому, якщо ви вже вирішили пройти саме комерційний курс, то ставтесь до цього
свідомо та відповідально від самого початку.
Інакше гроші замість курсів краще задонатьте на ЗСУ, їй богу усім ліпше буде.

Та хто навчає?
--------------

IT-школи пропонують на вибір приблизно однакові програми навчання.
А для більшості різниця між окремими курсами буде полягати тільки у фотографіях
людей, які будуть вас навчати.

По факту, найліпше що може зробити школа - звести вас та досвідченого практика
в одній точці простору-часу та надати вам усе необхідне для продуктивного
обміну досвідом.

Я заздалегідь вибачусь, але можете сприймати менеджерів школи як сутенерів,
яким ви платите за ментора-домінанта.
А тепер трошки математики (нічогенький такий стрибок від БДСМ аналогій).

Мабуть, ні для кого не буде секретом, що викладачі в своїй більшості поєднують
працю розробником з викладанням. Так от, наші школи можуть запропонувати своїм
викладачам збільшити місячний дохід максимум на 10%, а зазвичай і того менше.
При цьому обсяг роботи збільшується в півтора рази, а може і в два.
Якщо ви думали, що справа викладача завершилась на тому, щоб відчитати лекцію і
піти пити смузі, то це не так.
Відповідальний викладач, який піклується про своїх підлеглих, і намагається
розкрити їх потенціал буде:

- читати лекцію
- наповнювати лекції [#]_ додатковим матеріалом
- оновлювати навчальну програму
- оновлювати домашні завдання
- перевіряти домашні завдання
- вигадувати для студентів модульні задачки
- перевіряти модульні задачки
- спілкуватись з кожним студентом персонально на перервах та поза класом
- готувати для вас специфікації дипломних проектів
- приймати захист дипломних проектів
- звітувати перед школою за успіхи своїх студентів
- ... і ще багато чого

.. [#] Або позалекційний час, за який їм не заплатять.

Я гадаю легко зрозуміти, що це геть не рівноцінний розмін. А тому викладати
будуть [#]_:

- Вчорашні студенти цих же самих курсів, які не змогли знайти собі працю, і
  погоджуються на будь-який додатковий заробіток.
- "Професійні" викладачі, які роками гастролюють з одним і тим самим
  матеріалом між декількох курсів (частенько що в різних школах).
- Низькооплачувані спеціалісти, для яких частка доходу від школи буде
  співрозмірна з компенсацією за основною діяльністю. На відміну від попередніх
  мають реальний комерційний досвід.
- Дійсно гарні спеціалісти, які з усієї діяльності вище залишать тільки
  необхідний мінімум.
- Дійсно гарні спеціалісти, яким поки що просто подобається процес викладання.

.. [#] Розподіл умовний, насправді я б міг ще розширити цю класифікацію.
       Це буде так само справедливо для наступного розділу.

Ваше завдання, як абітурієнта, усіма силами намагатись потрапити на курс, який
веде представник останньої категорії. Коли ви вибрали напрямок, вашим завданням
буде обрати собі вчителя. IT-школи співпрацюють зі своїми викладачами за
форматом підряду. Тобто школа визначає список тем, які має покривати курс,
а далі викладач вільний робити що бажає. Більшість просто скористується
матеріалами, які надасть школа. Але дехто буде усіма силами, допоки не згасне
внутрішній запал [#]_, робити щось корисне.

.. [#] А це обов'язково станеться, це тільки питання часу.

Як зрозуміти хто є хто?

Найочевидніший спосіб - шукати відгуки про викладачів цікавого вам курсу.
Так, відгуки про школу загалом не такі корисні.

По-перше: адміністрація школи завжди вигадає, як додати собі позитивних
відгуків.

По-друге: люди, яким просто не подобається саме явище IT-шкіл, але які не мають
до підготовки новачків жодного відношення [#]_, завжди закинуть до відгуків
негатив.

По-трете: яка вам різниця, що Python в цій школі викладає супер чел,
якщо ви бажаєте робити ігри на Unity?

.. [#] А часто взагалі не розуміють як це робити.

Не знайшли? Можна спитати на тому ж DOU, або знайти випускників курсу у
LinkedIn. Але пам'ятайте: ви шукаєте відгуки не про школу, а про конкретний
курс та конкретних людей.

В останню чергу можна подивитись відгуки про викладачів та курс на сайті школи:
так, хоч це і треба буде розділити на два, відверто брехливих відгуків там
не публікують. Модераторам набагато легше просто не публікувати негативні
відгуки, ніж вигадувати хвалебні.

Можна переглянути активність цікавих вам людей на GitHub. Маю зазначити, що
деякі дуже гарні спеці не мають *особистих* акаунтів, тому відсутність такого
не обов'язково свідчить про щось погане. Але стабільні код ревью та оновлення
навчальних репозиторіїв вже багато каже на користь.

Не зайвим також буде переглянути активність на LinkedIn. Тут діє така ж логіка,
як з GitHub. Гарний викладач не обов'язково дуже соціально активний.

Індивідуальні репетитори
========================

Принцип той самий, як у IT-курсів. Просто тут відсутній посередник у вигляді
IT-школи. Тому я не буду повторюватись. Хіба знайти буде в рази складніше.
Індивідуально будуть викладати:

- "Професійні" репетитори, що є аналогом (а може і тим ж самими людьми)
  "професійних" викладачів з попереднього розділу.
- Студенти (або нещодавні випускники) профільних вишів.
- Гарні спеці, які погодяться повозитись з вами "по блату".

Як бачите, тут вам треба в ідеалі або знати людину особисто,
або ж мати посередника у вигляді спільного знайомого.

В цілому, можна спробувати домовитись з викладачем тих самих IT-курсів щодо
індивідуальних занять. Але моя практика підказує, що шанс виграти в лотерею
вищій, ніж шанс отримати згоду.

І будьте готові, що вам влаштують співбесіду.
Дійсно гарний спеціаліст не буде витрачати свій час на "кота у мішку".

Самонавчання
============

    \- Який дистрибутив Linux обрати для перегляду порно?

    \- Оскільки ви полюбляєте усе робити своїми руками, то безумовно Arch [#]_.

    -- Хтось з інтернету

.. [#] Як арчевод з багаторічним стажем скажу, що жарт дотепний,
       але застарів років так на 10-ть. (прим. авт.)

Один з найкращих варіантів, але водночас найскладніший.

Плюси тут очевидні: ви самостійно обираєте що саме, на яку глибину, коли і як
довго вивчати.
Проте уся відповідальність також цілком на вас (хоча, а коли було інакше?).
Також, не очікуйте на вагому допомогу, якщо зловите ступор [#]_.
Усе робите самостійно, і колупаєте дебаггер та читаєте документацію також.

.. [#] "коли зловите ступор" - так буде більш правдиво.

І не біжіть за допомогою до ШІ: з доволі високою вірогідністю він видасть вам
якусь єресь, яка в найкращому випадку не буде працювати; а у найгіршому буде,
і ви потрапите у пастку, коли ваш код працює, але ви гадки не маєте як саме.
Щоб спитати щось у ШІ треба по-перше вміння правильно сформувати запит,
а по-друге вже знати 90% відповіді;
швидше за все у вас не буде ані першого, ані другого.
Де ШІ вам дійсно допоможе - так це розібратись в прикладах коду та працювати
замість пошуковика Google. Принаймні на самому початку більше користі від цієї
технології вам не буде.

Також існують тематичні спільноти: форуми, чати в Telegram та Discord,
топіки на Reddit та DOU, зрештою є StackOverflow.
Більшість з них буде на половину населена такими ж саме шукачами пригод як ви,
на іншу - токсіками, які прийшли туди самостверджуватись на вашому фоні.
І час від часу туди буде заходити одна-дві людини, хто дійсно піклується про
підростаюче покоління розробників, та щиро бажає допомогти [#]_.
Найбільшу допомогу тут вам нададуть колеги по навчанню, що трохи попереду,
а можливо взагалі закрили цікаву вам тему буквально вчора.
Тому не дивуйтесь, якщо відповідь буде більш схожа на опис якогось магічного
ритуалу - цілком можливо, що ваш візаві сам не повністю розуміє, яким чином
воно взагалі працює.
Випади дотепників, якщо в них нема прямої відповіді на ваше питання, ліпше
ігнорувати [#]_.

.. [#] Принаймні до того часу, поки їм не набридне по 100-му колу повторювати
       одну і тут ж саму платівку, чи відправляти вам посилання на відповідь,
       яка вже декілька років висить у сусідньому чаті.
       Тоді вони або заходять все рідше, поки з рештою не зникнуть назавжди;
       або перебігають до токсичного табору і починають відриватись на повну
       (і не дай вам боже звернутись до них за хвилину після цього переходу).
.. [#] Загалом, не дуже звертайте увагу на таке явище як токсичність форумів.
       В професійних командах такого або нема взагалі, або воно на мінімальному
       рівні і сприймається швидше як дружні жарти.
       А на допомогу колеги прийдуть завжди, бо ви - частина команди, і частина
       корабля.
       Лишилось тільки до тієї професійної команди потрапити.

І раз ми вже тут. То ви маєте навчитись спілкуватись - це також вміння, яке у
нашій справі не менш важливе за розуміння синтаксису та семантики. Вмійте
поставити питання! На питання: "Мій код не працює! Чому?", може бути тільки
одна відповідь: "Бо кучеряво написав. Напиши так, щоб працював". До поки не
випрацюється власне розуміння та стиль, можете користуватись шаблоном:

    Я бажаю зробити {X}. Для цього я вирішив скористуватись {Y}, але замість
    очікуваного результату, я спостерігаю поведінку {Z}. Я намагався дивитись
    в {A}, і там сказано, що відбувається {B}. Але мені не зовсім зрозуміло,
    що в цьому випадку робить {C}. Чи може хтось допомогти розібратись з цим,
    або вказати на мою помилку, будь ласка?

    Ось code snippet: ...

По-перше: поважайте час тих, хто бажає вам допомогти. Не змушуйте їх гратись
у детектива, та розгрібати для вас Авгієві конюшні. Завжди надавайте максимум
інформації та ставте максимально конкретні питання.
І пишіть просто та зрозуміло: ніхто не буде читати сумбурне полотно тексту без
жодних розділових знаків.

По-друге: поки ви будете ретельно виписувати що саме ви робили і що сталось,
дуже часто ви самостійно знайдете відповідь на власне питання.

І загалом, debugger - ваш перший союзник та єдине, що дійсно на вашому боці.

CS50
----

І ми не можемо не помічати слона у кімнаті.

    Раніше, пару разів на рік, мої знайомі запитували мене:
    "Який курс програмування вибрати?" й кожен раз відповідав: "CS50".

    CS50 або повна назва CS50: Introduction to Computer Science це курс
    введення в комп'ютерні науки від Гарвардського університету, розрахований
    на студентів з досвідом та без досвіду програмування.

    -- Подорванов, Я.:cite:`dou:cs50-1`

    CS50 має позитивно вплинути на базову освіту початківців та позитивно
    повпливати на їх подальшу кар'єру...

    -- Подорванов, Я.:cite:`dou:cs50-2`

    Українці повинні звернути увагу на якісне навчання...

    -- Капля, А.:cite:`dou:cs50-5`

Цей шлях - гібрид профільної освіти на мінімалках, та вивернутого самостійного
навчання. При цьому все це безкоштовно, якщо звісно не брати до уваги рахунки
за інтернет та комуналку, і вважати що ваш час оцінюється в 0.0.

.. TODO: add link to CS50 honest review

Коротко, я раджу пройти цей курс, якщо дійсне одне або більше з наступних
тверджень:

- ви плануєте отримати ступінь магістра комп'ютерних наук в Гарварді.
- вам в цілому не важливо що саме та як вивчати [#]_.
- ви вже стали розробником, але вам не вистачає якихось базових речей,
  а читати профільну літературу та документацію забороняє релігія.
- ви в цілому не збираєтесь в IT, але маєте купи друзів програмістів,
  і бажаєте розуміти, про що вони розмовляють своєю місячною мовою.
- ви маєте необмежені ресурси: час та гроші для вас не проблема.
- ви пишете статтю про CS50 [#]_.

.. [#] Люди з такими намірами мали б дропнути цю статтю ще на початку,
       але про всяк випадок.
       З рештою це можуть читати ті, хто просто полюбляє проходити усякі курси.
.. [#] Як показує практика, це опціонально і таким заморочився тільки я.
       (прим. авт.)

.. TODO: investigate CS50P, CS50W, CS50X etc.

Для абсолютного новачка можуть бути цікавими спеціалізовані варіації курсу:
`CS50P`_, `CS50W`_, `CS50 SQL`_... Підбірка навчальних матеріалів зі знаком
якості університету Гарварда. На відміну від базового батьківського курсу
вже мають практичну користь, але в найкращих традиціях CS50 вимагають дуже
багато часу та зусиль в обмін на доволі примітивні та малоконкурентні навички.

.. _CS50P: https://www.edx.org/learn/python/harvard-university-cs50-s-introduction-to-programming-with-python
.. _CS50W: https://www.edx.org/learn/web-development/harvard-university-cs50-s-web-programming-with-python-and-javascript
.. _CS50 SQL: https://www.edx.org/learn/sql/harvard-university-cs50-s-introduction-to-databases-with-sql

Відео на YouTube
----------------

Їх дуже багато, різної якості та змісту. І я б дуже не радив починати свою
освіту звідси. На кожен ролик, який дійсно вартує уваги, буде 10-к (якщо не
100-ня) відвертого шлаку, який швидше нашкодить. Але якщо ви тільки на початку
свого шляху - вам банально не вистачить досвіду та знань, щоб зрозуміти де що.
Теорія вірогідності не на вашу боці. Кількість підписників та переглядів,
коментарі до відеоматеріалу, різні посилання - це все дуже хиткі метрики, які
майже ні про що вам не скажуть.

Одразу скажу, що відео з заголовками: "Мова програмування за годину"
можете навіть не відкривати. Нічого цінного в них не має.

Якщо комусь цікава моя порада: `freeCodeCamp.org`_ має гарні підбірки відео
різного змісту, та під різні теми: від доволі абстрактних, до цілком практичних
та вузькоспеціалізованих. І на цьому каналі є яка-не-яка валідація матеріалу та
доповідачів.

.. _freeCodeCamp.org: https://www.youtube.com/@freecodecamp

Що стосується тематичних відео - їх також доволі багато, і швидше за все
ви сформуєте свою підбірку авторів під час свого навчання.
Але це слід сприймати виключно як додаткову інформацію, бо на перший час ваші
найліпші друзі - це

Офіційна документацією та підручники
------------------------------------

Це єдине джерело істини - пояснення від розробників, які можливості надає їх
технологія, та як нею користуватись. Хто може зробити це ліпше ніж автори [#]_?
Підручники у свою чергу завжди базуються на документації, але мають додаткові
пояснення та приклади, а також проходять перевірку фактів та декілька редакцій.

.. [#] Звісно буває таке, що документація написана погано,
       але це здебільшого стосується тих явищ, про які знає 3.5 людини.

Документація завжди починається з основ.

- Що необхідно для старту та як це інсталювати?
- Які інструменти доступні та як ними користуватись?
- Які додаткові інструменти можна використовувати та як їх отримати?
- Як налаштувати первинне середовище розробки?
- Які базові типи даних підтримуються?
- Як будувати власні структури?
- Як зробити перший проект?

На всі ці та сотню інших питань ви знайдете відповіді.

І все це буде супроводжуватись прикладами. А також, дуже часто вам запропонують
додаткові навчальні матеріали та інструкції щодо користування ними,
або посилання на ресурси, рекомендовані для глибшого вивчення предмету.
Або і те, і інше, і ще щось.

Для всього буде класифікація: ось ця частина - абсолютний мінімум, без якого
неможливо; тут розділи для просунутих користувачів, а тут - список проектів,
які можна переглянути для натхнення та розуміння предмету.

Документація є для всього.

    І вона завжди оновлюється першою. А все інше - за нею.

    -- капітан Очевидність

І так, читати доведеться прямо дуже багато. І не вважайте це чимось не цікавим:
програмісти пишуть код дай боже 10% свого робочого часу, а все інше присвячено
робочим ритуалам [#]_ та розбору документації [#]_.

.. [#] Групові дзвінки, перетаскування завдань на дошці проекту, видача
       задачкам якихось циферок чи інших позначок, і т.п.
.. [#] Або промптів для ШІ та його графоманських відповідей.
